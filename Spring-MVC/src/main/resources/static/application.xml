<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.spring.mvc">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>


    <!--    配置Thymeleaf视图解析器  -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <property name="prefix" value="/WEB-INF/pages/"/>
                        <property name="suffix" value=".html"/>
                        <!--<property name="templateMode" value="HTML5"/> 的value值都是大写的-->
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--    使用命名空间引入类路径下的外部属性文件  -->
    <context:property-placeholder location="classpath:static/pool_info.properties"/>

    <!--    配置连接池读取文件信息(需要有连接池的相关jar包)-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${prop.driverClassName}"/>
        <property name="url" value="${prop.url}"/>
        <property name="username" value="${prop.username}"/>
        <property name="password" value="${prop.password}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--    默认程序上下文访问home页面(删除原有的注解)-->
    <!--        <mvc:view-controller path="/" view-name="home"/>-->

    <!--开启注解驱动（开就完了）-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 处理响应中文内容乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8" />
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--开放静态资源的访问,也就是说当中央处理器处理不了某个请求时，将会把这个请求给默认servlet处理器处理-->
    <mvc:default-servlet-handler/>

    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
    </bean>

<!--    <bean class="com.spring.mvc.interceptor.FirstInterceptor"/>-->
    <!-- 这种配置方式都是对DispatcherServlet所处理的所有的请求进行拦截 -->


    <mvc:interceptors>
        <mvc:interceptor>
<!--            拦截所有请求-->
            <mvc:mapping path="/**"/>
<!--            不会拦截的请求-->
            <mvc:exclude-mapping path="/Interceptor/home"/>
<!--            拦截器的id-->
            <ref bean="FirstInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                &lt;!&ndash;-->
<!--                    properties的键表示处理器方法执行过程中出现的异常-->
<!--                    properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面-->
<!--                &ndash;&gt;-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--        &lt;!&ndash;-->
<!--            exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享-->
<!--        &ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="ex"/>-->
<!--    </bean>-->



</beans>